
import sqlite3
conn = sqlite3.connect('card.s3db')


def luna(card_number):
    last = int(card_number) % 10
    _list = list(card_number[:15])
    multi2 = [int(_list[i]) * 2 if i % 2 == 0 else int(_list[i]) for i in range(len(_list))]
    count = sum([int(multi2[i]) - 9 if int(multi2[i]) > 9 else int(multi2[i]) for i in range(len(multi2))])
    checksum = 0
    while count % 10 != 0:
        count += 1
        checksum += 1
    if checksum == last:
        card_number = card_number[:15] + str(checksum)
        return True
    else:
        return False



with conn:
    cur = conn.cursor()
    cur.execute("CREATE TABLE card id INTEGER, number TEXT, pin TEXT, balance INTEGER DEFAULT 0")

    from random import randrange, randint
    log_user_choice = ''
    id = 1
    balance = 0
    _list_card_number = []
    _list_card_pin = []
    while True:
        if log_user_choice == 0:
            print('', "Bye!", sep='\n')
            break
        else:
            user_choice = int(input('''1. Create an account
2. Log into account
0. Exit
'''))
            if user_choice == 1:
                while True:
                    card_number = '400000' + str(randrange(1000000000, 9999999999))
                    if luna(card_number):
                        _list_card_number.append(card_number)
                        break
                card_pin = randint(1000, 9999)
                _list_card_pin.append(card_pin)

                print('', "Your card has been created", "Your card number:", card_number, "Your card PIN:", card_pin, '', sep='\n')
                cur.execute(f"insert into card values ({id}, {str(card_number)}, {str(card_pin)}, {balance}) ")
                conn.commit()
                id += 1
            elif user_choice == 2:
                print()
                log_card_number = input('Enter your card number: ')
                log_card_pin = input('Enter your PIN: ')
                for i in range(len(_list_card_number)):
                    if log_card_number == _list_card_number[i] and log_card_pin == str(_list_card_pin[i]):
                        print('', "You have successfully logged in!", sep='\n')
                        while True:
                            log_user_choice = int(input('''
1. Balance
2. Add income
3. Do transfer
4. Close account
5. Log out
0. Exit
'''))
                            if log_user_choice == 1:
                                print()
                                print(f'Balance: {balance}')
                            elif log_user_choice == 2:
                                print()
                                income = int(input("Enter income: "))
                                balance += income
                                cur.execute(f"UPDATE card SET balance = {balance} WHERE number = {log_card_number}")
                                conn.commit()
                                print("Income was added!")
                            elif log_user_choice == 3:
                                print('', "Transfer", sep='\n')
                                transfer_card_number = input("Enter card number: ")
                                if transfer_card_number in _list_card_number and transfer_card_number != log_card_number:
                                    tranfer_money = int(input("Enter how much money you want to transfer: "))
                                    if tranfer_money > balance:
                                        print("Not enough money!")
                                    else:
                                        balance -= tranfer_money
                                        cur.execute(f"UPDATE card SET balance = {balance} WHERE number = {log_card_number}")
                                        cur.execute(f"UPDATE card SET balance = {tranfer_money} WHERE number = {transfer_card_number}")
                                        conn.commit()
                                        print("Success!")
                                elif transfer_card_number == log_card_number:
                                    print("You can't transfer money to the same account!")
                                elif luna(transfer_card_number) == False:
                                    print("Probably you made a mistake in the card number. Please try again!")
                                elif transfer_card_number not in _list_card_number:
                                    print("Such a card does not exist.")
                            elif log_user_choice == 4:
                                cur.execute(f"delete from card where number = {log_card_number}")
                                conn.commit()
                                print('', "The account has been closed!", '', sep='\n')
                                break
                            elif log_user_choice == 5:
                                print('', "You have successfully logged out!", '', sep='\n')
                                break
                            elif log_user_choice == 0:
                                break
                    else:
                        print('', "Wrong card number or PIN!", '', sep='\n')
            elif user_choice == 0:
                print('', "Bye!", sep='\n')
                break



    conn.commit()
    cur.close()
